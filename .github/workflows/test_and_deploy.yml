name: Run Python Unit Tests and Deploy to PyPI

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install requirements for the tool
        run: pip install -r requirements.txt

      - name: Install requirements for tests
        run: pip install -r requirements-dev.txt

      - name: Run tests
        run: make run_tests

  check_skip_tag:
    if: github.event_name == 'push'
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skipcheck.outputs.should_skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Check if deploy is skipped
        id: skipcheck
        run: |
          if git log -1 --pretty=%B | grep -q '#skipdeploy'; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  deploy:
    if: github.event_name == 'push' && needs.check_skip_tag.outputs.should_skip == 'false'
    needs: [test, check_skip_tag]
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Bump version and push tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: Build the package
        env:
          GIT_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          python -m pip install --upgrade build
          python -m build -w

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}